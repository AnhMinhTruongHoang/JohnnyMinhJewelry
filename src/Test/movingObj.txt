"use client";

import { Environment, OrbitControls } from "@react-three/drei";
import { useRef } from "react";
import { Group } from "three";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";
import { useGSAP } from "@gsap/react";
import { useMediaQuery } from "@/hooks/useMediaQuery";
import FloatingRing from "@/Components/floating.ring";

gsap.registerPlugin(ScrollTrigger, useGSAP);

type Props = {};

export default function Scene({}: Props) {
  const canRef = useRef<Group>(null);
  const isDesktop = useMediaQuery("(min-width: 768px)", true);

  // üé® M√†u background cho t·ª´ng section (c√≥ th·ªÉ th√™m nhi·ªÅu m√†u)
  const bgColors = ["#E9CFF6"];

  useGSAP(
    () => {
      if (!canRef.current) return;

      const sections = gsap.utils.toArray(".alternating-section");

      const scrollTl = gsap.timeline({
        scrollTrigger: {
          trigger: ".alternating-text-view",
          endTrigger: ".alternating-text-container",
          pin: true,
          start: "top top",
          end: "bottom bottom",
          scrub: true,
        },
      });

      sections.forEach((_, index) => {
        if (!canRef.current) return;
        if (index === 0) return;

        const isOdd = index % 2 !== 0;

        // üëâ T√πy ch·ªânh chuy·ªÉn ƒë·ªông theo section:
        // xPosition: di chuy·ªÉn v·∫≠t th·ªÉ theo tr·ª•c X
        // yRotation: xoay v·∫≠t th·ªÉ theo tr·ª•c Y
        const xPosition = isDesktop ? (isOdd ? "-1" : "1") : 0;
        const yRotation = isDesktop ? (isOdd ? ".4" : "-.4") : 0;

        scrollTl
          .to(canRef.current.position, {
            x: xPosition, // üëà ƒë·ªïi s·ªë n√†y ƒë·ªÉ v·∫≠t th·ªÉ tr∆∞·ª£t nhi·ªÅu hay √≠t
            ease: "circ.inOut",
            delay: 0.5,
          })
          .to(
            canRef.current.rotation,
            {
              y: yRotation, // üëà ƒë·ªïi s·ªë n√†y ƒë·ªÉ v·∫≠t th·ªÉ xoay m·∫°nh hay nh·∫π
              ease: "back.inOut",
            },
            "<",
          )
          .to(".alternating-text-container", {
            backgroundColor: gsap.utils.wrap(bgColors, index),
          });
      });
    },
    { dependencies: [isDesktop] },
  );

  return (
    <group
      ref={canRef}
      // üëâ V·ªã tr√≠ ban ƒë·∫ßu c·ªßa v·∫≠t th·ªÉ:
      // tƒÉng/gi·∫£m position-x, y, z ƒë·ªÉ ƒë·ªïi ch·ªó ring
      position-x={isDesktop ? 1 : 0}
      position-y={0} // üëà l√™n/xu·ªëng
      position-z={0} // üëà ra tr∆∞·ªõc / l√πi sau camera
      // üëâ G√≥c xoay ban ƒë·∫ßu (radian):
      rotation-y={isDesktop ? 0 : -0.3} // üëà xoay qua tr√°i/ph·∫£i
      rotation-x={0} // üëà ng·ª≠a l√™n/xu·ªëng
      rotation-z={0} // üëà xoay nghi√™ng
      // üëâ Scale to√†n b·ªô group:
      scale={1.2} // üëà tƒÉng l√™n 2.0 cho to h∆°n
    >
      <FloatingRing />
      <Environment files={"/HDR/lobby.hdr"} environmentIntensity={1.5} />
    </group>
  );
}
